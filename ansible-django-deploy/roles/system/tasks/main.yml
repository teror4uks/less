---

- name: updating the system
  apt: update_cache=yes cache_valid_time=86400
  notify:
  - restart server

#- name: Add mariadb apt repository key
#  apt_key: id=0xcbcb082a1bb943db keyserver=hkp://keyserver.ubuntu.com:80 state=present

#- name: Add mariadb apt repository
#  apt_repository: repo='deb http://mirror.timeweb.ru/mariadb/repo/10.1/debian wheezy main' state=present

- name: install packages
  apt: pkg={{ item.name }} state=present
  with_items:
    - name: python3-virtualenv
    - name: python3-pip
    - name: python-virtualenv
    - name: python-pip
    - name: python3-venv
    - name: uwsgi-plugin-python3
    - name: nginx
    - name: uwsgi
    - name: uwsgi-plugin-python
    - name: zip
    - name: unzip

#- name: copy supervisor config
#  template: src=supervisor.conf.j2 dest=/etc/supervisor/conf.d/{{ project_url }}.conf
#  notify:
#    - restart site

- name: create linux user
  user: name={{ username }} shell=/bin/bash home={{ user_homedir }} password={{ user_crypt_password }}

- name: create directory 
  file: path="{{ user_homedir }}/.ssh" owner="{{ username }}" group="{{ username }}" state=directory mode=0700

- name: create authtorized file
  file: state=touch path="{{ user_homedir }}/.ssh/authorized_keys" owner="{{ username }}" group="{{ username }}" mode=0600

- name: add open key for connect this user
  lineinfile: dest="{{ user_homedir }}/.ssh/authorized_keys" owner="{{ username }}" group="{{ username }}" line="{{ admin_open_key }}"

- name: add user to allow user for connect ssh
  lineinfile:
        dest='/etc/ssh/sshd_config'
        regexp='^AllowUsers'
        line='AllowUsers root {{ username }}'
        state='present' 
        backrefs='yes'
  notify:
    - restart ssh

#- name: Create MySQL user
#  mysql_user: >
#    name={{ mysql_user }}
#    host=%
#    password={{ mysql_user_password }}
#    priv={{ mysql_database }}.*:ALL
#    login_user={{ mysql_root_user }}
#    login_password={{ mysql_root_password }}
#    state=present
#  notify:
#    - restart mysql

# create database
#- name: Create MySQL database
#  mysql_db: >
#    name={{ mysql_database }}
#    collation=utf8_general_ci
#    encoding=utf8
#    login_user={{ mysql_root_user }}
#    login_password={{ mysql_root_password }}
#    state=present
#  notify:
#    - restart mysql

- name: copy nginx config
  template: src=nginx.j2 dest=/etc/nginx/sites-available/{{ project_url }}
#  notify:
#    - restart nginx

- name: create symlink nginx config
  file: src=/etc/nginx/sites-available/{{ project_url }} dest=/etc/nginx/sites-enabled/{{ project_url }} state=link

- name: create folder vassals
  file: path="/etc/uwsgi/vassals" owner="root" group=root state=directory

- name: create symlink for emperator 
  file: src="{{ user_homedir }}/projects/{{ project_slug }}/{{ project_slug }}/uwsgi.{{ project_slug }}.ini" dest="/etc/uwsgi/vassals/uwsgi.{{ project_slug }}.ini" state=link

- name: create service
  template: src="shortner.service.j2" dest="/etc/systemd/system/shortner.service"
